<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ZolHo Blog</title>
    <description>About something</description>
    <link>http://localhost:4001/</link>
    <atom:link href="http://localhost:4001/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 16 Aug 2020 19:37:29 +0800</pubDate>
    <lastBuildDate>Sun, 16 Aug 2020 19:37:29 +0800</lastBuildDate>
    <generator>Jekyll v4.1.0</generator>
    
      <item>
        <title>学习日记_2020年8月</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;2020_08_16&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;使用Netlify加速github page(不过好像还是比较慢)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_15&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;配置树莓派的内网穿透&lt;/li&gt;
  &lt;li&gt;将域名绑定github page&lt;/li&gt;
  &lt;li&gt;CDN加速, 公司的加速成功了, 但是github的不行, 研究了下没太明白为什么&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_14&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;捣鼓树莓派&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_13&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;终于上到了传说&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_12&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;上分,在钻3被摩擦&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_11&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;皇家菜博物馆吃晚饭&lt;/li&gt;
  &lt;li&gt;打牌, 干活&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_10&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;改机票, 咸鱼&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_09&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-201/&quot;&gt;周赛201&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2562&lt;/code&gt; - 电视真好
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-201/problems/make-the-string-great/&quot;&gt;整理字符串&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-201/problems/find-kth-bit-in-nth-binary-string/&quot;&gt;找出第 N 个二进制字符串中的第 K 位&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_08&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;看电影&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;误杀&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-32/&quot;&gt;双周赛32&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1385&lt;/code&gt; - 随便写写
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/can-convert-string-in-k-moves/submissions/&quot;&gt;K 次操作转变字符串&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_07&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;一起看男高日&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_06&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;打牌&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_05&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/house-robber-iii/&quot;&gt;打家劫舍 III&lt;/a&gt; - 树上dp - python写起来真简洁&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_04&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/&quot;&gt;两个链表的第一个公共节点&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/course-schedule/&quot;&gt;课程表&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;密码学课程&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_03&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;约等于啥也没干&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_02&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-200&quot;&gt;周赛-200&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1170&lt;/code&gt; - 碰巧看到了就参加了
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/count-good-triplets/&quot;&gt;统计好三元组&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/find-the-winner-of-an-array-game/&quot;&gt;找出数组游戏的赢家&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/minimum-swaps-to-arrange-a-binary-grid/&quot;&gt;排布二进制网格的最少交换次数&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list/&quot;&gt;二叉树展开为链表&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;vim再入门&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_08_01&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;装双系统&lt;/li&gt;
  &lt;li&gt;something wrong&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
        <pubDate>Sat, 01 Aug 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2020/08/01/study2008/</link>
        <guid isPermaLink="true">http://localhost:4001/2020/08/01/study2008/</guid>
        
        <category>学习记录</category>
        
        <category>日记</category>
        
        
      </item>
    
      <item>
        <title>Python多线程爬虫爬取图片资源</title>
        <description>&lt;h1 id=&quot;如何制作一个多线程的爬虫&quot;&gt;如何制作一个多线程的爬虫&lt;/h1&gt;

&lt;h3 id=&quot;前言&quot;&gt;前言&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;目标:&lt;/strong&gt; 通过多线程提高爬取图片资源站资源的效率&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;前置知识:&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;使用python发起http请求&lt;/li&gt;
      &lt;li&gt;使用BeautifulSoup或其他库解析请求返回的网站文本&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1-何为生产者消费者模式&quot;&gt;1. 何为生产者消费者模式&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;生产着消费者问题描述了一个场景, 存在若干生产物品的生产者和若干消费物品的消费者,以及一个容量有限的仓库&lt;br /&gt;
生产者不能生产超过仓库容量的物品, 消费者也不能在仓库为空时消费物品&lt;br /&gt;
为此, 我们需要在仓库满时挂起生产者的, 在仓库空时挂起消费者以实现两者之间的同步&lt;/p&gt;

&lt;p&gt;在我们目标下, 我们需要若干生产者线程生产资源的链接, 若干消费者线程获取链接并下载内容&lt;br /&gt;
单线程时, 我们需要&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;获取链接-&amp;gt;进行下载&lt;/code&gt;这样的循环操作, 由于下载时候是较费时的IO操作, 获取链接主要是CPU操作, 将它们分离开来显然是可以节省相互等待的时间的&lt;br /&gt;
于是我们可以有若干线程同时爬取资源链接, 若干线程同时进行下载操作&lt;/p&gt;

&lt;p&gt;所以我们需要一个消费者线程, 一个生产者线程, 以及一个线程安全的连接池&lt;br /&gt;
在python中, queue包就是实现了线程安全的一个队列, 我们可以使用他作为连接池&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Producter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# 生产者模型：解析页面，将得到的图片地址放入img图片队列中
&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;#初始化
&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;#实现消费者模型的主要业务逻辑
&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# 当页面队列为空，生产者停止生产
&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# 获取url队列的对象，进行页面解析
&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# 解析页面并获取链接
&lt;/span&gt;      &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Consumer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;threading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# 消费者模型的主要业务逻辑
&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# 初始化
&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# 读取img队列的链接并下载到本地
&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# 当解析队列和图片链接队列都为空时退出
&lt;/span&gt;          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_queue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样, 一个基本的生产者消费者模式的框架就有了, 我们实现里面的功能, 并在主线程开启若干线程即可&lt;/p&gt;

&lt;h2 id=&quot;2-实现过程中的问题&quot;&gt;2. 实现过程中的问题&lt;/h2&gt;
&lt;hr /&gt;

&lt;h4 id=&quot;实现爬取页面里的其他页面链接&quot;&gt;实现爬取页面里的其他页面链接&lt;/h4&gt;
&lt;p&gt;由于我们不可能只爬取固定页面的资源, 我们需要在爬取图片链接的同时, 将其他的页面抓取到生产者的队列中&lt;br /&gt;
实现这个功能并不难, 但网页的链接比我想的多的多, 很快就到达了queue设置的上限&lt;br /&gt;
到达上线后, 生产者线程就开始占着cpu划水了, 因为这个问题导致提取图片资源效率极低, 这是后来才发现的, 后面说如何处理&lt;br /&gt;
另一个, 由于存在大量链接以及循环引用的存在, 链接极易重复, 如果用遍历来查重我觉得效率太低了, 于是使用了hash实现的python中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set&lt;/code&gt;查重页面以及图片链接, 这是非线程安全的, 但问题不大&lt;/p&gt;

&lt;h4 id=&quot;解决各种杂症&quot;&gt;解决各种杂症&lt;/h4&gt;
&lt;p&gt;修修改改实现大致功能运行后, 下载一小段时间就开始卡住, 极慢的下载
排查后发现是页面链接太多到达了queue上限&lt;br /&gt;
而且我认为按爬取的顺序来访问页面, 可能效率没有访问的好&lt;br /&gt;
于是我对一个页面中的所有链接进行python的切片, 每隔step个链接就加入一个到队列中&lt;br /&gt;
并且判断队列的内容长度, 如果太多了就加大step, 反之亦反&lt;br /&gt;
这样处理之后一运行, 下载立马全速进行, 之前卡卡嗖嗖的下了几百个图, 改了之后下了一个小时也没见变慢&lt;br /&gt;
but我的硬盘会撑不住, 下了快一万张图后停下了, 这次尝试也算是成功了&lt;/p&gt;

&lt;h2 id=&quot;3-总结&quot;&gt;3. 总结&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;在实现目标的过程中发现, 对于爬虫来说, 要爬取大量链接时, 链接重复一定是一个问题&lt;br /&gt;
我寻思一定有成熟的方案, 我在这里只是做一个初学者的尝试, 对于超大量级来说, em…我可能想不到什么解决方案&lt;br /&gt;
还是太菜了, 这个先到这里, 当最后爬虫全速运行时, 感觉真爽&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Jul 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2020/07/24/pyspi_0/</link>
        <guid isPermaLink="true">http://localhost:4001/2020/07/24/pyspi_0/</guid>
        
        <category>python</category>
        
        <category>爬虫</category>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>学习日记_2020年7月</title>
        <description>&lt;h3 id=&quot;总结&quot;&gt;总结&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode周赛600-1k多吧, 被禁赛也是没刷题和比赛的激情了&lt;/li&gt;
  &lt;li&gt;大半的时间帮我爸干活去了, 他那些事, 工作不一定多少, 但就是得在外面跑一天&lt;/li&gt;
  &lt;li&gt;装电脑, 买域名&amp;amp;服务器&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_31&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;又干了半天活&lt;/li&gt;
  &lt;li&gt;整虚拟机还没整好，本来24号开始整，整两天就行了&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_30&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;又给我爸干半天活&lt;/li&gt;
  &lt;li&gt;更换风扇硅脂，散热好多了&lt;/li&gt;
  &lt;li&gt;以后要买朝南的房子种西瓜&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_29&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;wine, exagear失败&lt;/li&gt;
  &lt;li&gt;咸鱼&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_28&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;帮我爸干活&lt;/li&gt;
  &lt;li&gt;买了个域名，弄的bitcoin支付，没想到买了之后提个币都要40块手续费，血亏&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_27&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/is-subsequence/submissions/&quot;&gt;判断子序列&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;搭网站&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_26&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-199/&quot;&gt;周赛-199&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3129&lt;/code&gt; - 封号没什么激情认真打了，家里也吵，做了一题，看了最后一题没写出来
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/shuffle-string/&quot;&gt;重新排列字符串&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;美化windows，细致活，还重装了一次&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_25&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-31/&quot;&gt;双周赛-31&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;962&lt;/code&gt; - A了两题没看了
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-31/problems/count-odd-numbers-in-an-interval-range/&quot;&gt;在区间范围内统计奇数数目&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-31/problems/number-of-good-ways-to-split-a-string/&quot;&gt;字符串的好分割数目&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;配置新电脑&lt;/li&gt;
  &lt;li&gt;世贸天阶&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_24&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;配置新的台式电脑&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_23&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/minimum-path-sum/&quot;&gt;最小路径和&lt;/a&gt; - 标准dp&lt;/li&gt;
  &lt;li&gt;多线程爬虫&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_22&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/xuan-zhuan-shu-zu-de-zui-xiao-shu-zi-lcof/&quot;&gt;旋转数组的最小数字&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_21&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/unique-binary-search-trees-ii/&quot;&gt;不同的二叉搜索树 II&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;晕，LeetCode账号禁赛一个月，我觉得我只是对特例用特殊方法算，并没有打表。要是我的特判条件没那么无脑，那肯定和正常解答一样的&lt;/li&gt;
  &lt;li&gt;生日吃大餐&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_20&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/&quot;&gt;两数之和 II - 输入有序数组&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;出去干活&lt;/li&gt;
  &lt;li&gt;winapi&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_19&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-198/&quot;&gt;周赛198&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1029&lt;/code&gt; - 好气呀，差点可以拿个微软的杯子
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-198/problems/water-bottles/&quot;&gt;换酒问题&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-198/problems/number-of-nodes-in-the-sub-tree-with-the-same-label/&quot;&gt;子树中标签相同的节点数&lt;/a&gt; - dfs一个特例过不去，最后特判过了QAQ，又做了好久，pycharm都给我卡死了&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-198/problems/maximum-number-of-non-overlapping-substrings/&quot;&gt;最多的不重叠子字符串&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;待完成&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-198/problems/find-a-value-of-a-mysterious-function-closest-to-target/&quot;&gt;找到最接近目标值的函数值&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;待完成&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;格盘重装了mac，受不了经常卡的bug，以前需要配置半天的环境，现在分分钟都搞定了，时间真快&lt;/li&gt;
  &lt;li&gt;摸鱼&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_18&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/interleaving-string/&quot;&gt;交错字符串&lt;/a&gt; - 递归+记忆剪枝&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;干活&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_17&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/search-insert-position/&quot;&gt;搜索插入位置&lt;/a&gt; - bisect&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;生病，打炉石&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_16&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/is-graph-bipartite/&quot;&gt;判断二分图&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;其他
    &lt;ul&gt;
      &lt;li&gt;一起看&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;坡道上的家&lt;/code&gt;，描绘日本家庭伦理问题，女性的家庭地位，全职主妇面临的矛盾与问题。
话说日本是挺敢拍的，但是并没什么用，环境并不会因为一部电视剧发生改变，它的观众也不会是它想揭露的对象。
人类本身不会因为科技进步而剔除生物本能，历史是会不断重演的，人还是原来的人。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_15&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/unique-binary-search-trees/&quot;&gt;不同的二叉搜索树&lt;/a&gt; - dp&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;预计干一天活 &lt;em&gt;确实干了一天活&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_14&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/triangle/&quot;&gt;三角形最小路径和&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;娱乐
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;元龙&lt;/code&gt; - 爽文国漫，爽一爽 穿越之我叫特种兵&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_07_13&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/intersection-of-two-arrays-ii/&quot;&gt;两个数组的交集 II&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;电影
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;黑衣人&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;黑衣人2&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;疯狂的石头&lt;/code&gt; - 一起看的嘿嘿嘿，搞笑，神作，伏笔与各条线路处理的都十分合理和巧妙&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_12&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof/&quot;&gt;重建二叉树&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/dungeon-game/&quot;&gt;地下城游戏&lt;/a&gt; - 反向DP，用正向的有问题，成了贪心算法，没想到要反着来&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/hamming-distance/&quot;&gt;汉明距离&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/merge-two-binary-trees/&quot;&gt;合并二叉树&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/invert-binary-tree/&quot;&gt;翻转二叉树&lt;/a&gt; - 讲个笑话，homebrew的作者因为没有手写出这道题被谷歌拒了&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/&quot;&gt;二叉树的最大深度&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/reverse-linked-list/&quot;&gt;反转链表&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/single-number/&quot;&gt;只出现一次的数字&lt;/a&gt; - 异或&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/majority-element/&quot;&gt;多数元素&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/move-zeroes/submissions/&quot;&gt;移动零&lt;/a&gt; - 双数组&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-197/&quot;&gt;周赛197&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;728&lt;/code&gt; - 3分钟前两题，第三题最后都没做出来，想了各种剪枝都过不了，过了的是bfs，我是dfs…
        &lt;ul&gt;
          &lt;li&gt;好数对的数目](https://leetcode-cn.com/problems/number-of-good-pairs/)&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/number-of-substrings-with-only-1s/&quot;&gt;仅含 1 的子串数&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/path-with-maximum-probability/&quot;&gt;概率最大的路径&lt;/a&gt; - 哭了，广搜一遍过&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-197/problems/best-position-for-a-service-centre/&quot;&gt;服务中心的最佳位置&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;模拟退火&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;梯度下降&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;待完成&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;电影
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;赌圣&lt;/code&gt; - 还行吧，有时间看看赌神&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;缝纫机乐队&lt;/code&gt; - 呜呜，好多地方看得起鸡皮疙瘩，差点要哭了，好可惜没有在电影院看到。很久之前看到那段合奏的fusion就想看看了，当时要vip，就懒得弄了。看得挺感慨的。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_11&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/count-of-smaller-numbers-after-self/&quot;&gt;计算右侧小于当前元素的个数&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-30&quot;&gt;双周赛30&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;617&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AK&lt;/code&gt; - A掉第四题提升了100名….这么简单的嘛..
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-30/problems/reformat-date/&quot;&gt;转变日期格式&lt;/a&gt; - string处理&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-30/problems/range-sum-of-sorted-subarray-sums/&quot;&gt;子数组和排序后的区间和&lt;/a&gt; - 前缀和&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-30/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves/&quot;&gt; 三次操作后最大值与最小值的最小差&lt;/a&gt; - emmm,没啥好说的&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-30/problems/stone-game-iv/&quot;&gt;石子游戏 IV&lt;/a&gt; - 博弈，用的状态转移来做，但是有的状态是叠加的，最后灵机一动，把有叠加的判负，最后还存在获胜路径胜利路径判胜，就过了，可能是蒙过的&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;做胃镜…有点痛苦&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_10&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/&quot;&gt;最佳买卖股票时机含冷冻期&lt;/a&gt; - dp&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;概率统计&lt;/li&gt;
  &lt;li&gt;划水&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_09&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/re-space-lcci/&quot;&gt;恢复空格&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;划水，看动漫&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_08&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/diving-board-lcci/&quot;&gt;跳水板&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits/&quot;&gt;最多 K 次交换相邻数位后得到的最小整数&lt;/a&gt; - 整一天，超时，不整了&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_07&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/path-sum/&quot;&gt;路径总和&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/longest-valid-parentheses/&quot;&gt;最长有效括号&lt;/a&gt; - 一维dp&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;开黑&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_06&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/unique-paths-ii/&quot;&gt;不同路径 II&lt;/a&gt; - 简单dp&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;医院待了一天&lt;/li&gt;
  &lt;li&gt;一起看了个电影&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;催眠 裁决&lt;/code&gt;，还ok吧，就开催眠挂&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_05&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/wildcard-matching/&quot;&gt;通配符匹配&lt;/a&gt; - 错一板，之前做过类似，这次得&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;记忆化&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-196/&quot;&gt;周赛196&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;977&lt;/code&gt; - 哭了，7分钟做完12，选第四题做，结果到最后还是有超时,早知道做第三题还能混个好点的排名
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-196/problems/can-make-arithmetic-progression-from-sequence/&quot;&gt;判断能否形成等差数列&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-196/problems/last-moment-before-all-ants-fall-out-of-a-plank/&quot;&gt;所有蚂蚁掉下来前的最后一刻&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-196/problems/count-submatrices-with-all-ones/&quot;&gt;统计全 1 子矩形&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;待完成&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-196/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits/&quot;&gt;最多 K 次交换相邻数位后得到的最小整数&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;待完成&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_04&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;啥也没干，去了河北&lt;/li&gt;
  &lt;li&gt;晚上去光影街吃宵夜去了&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_03&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/&quot;&gt;将有序数组转换为二叉搜索树&lt;/a&gt; - 二分&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;帮我爸公司整了个西数固态，速度杠杠滴&lt;/li&gt;
  &lt;li&gt;看了看自己搭建nas&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_02&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/kth-smallest-element-in-a-sorted-matrix/&quot;&gt;有序矩阵中第K小的元素&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;上午去医院，结果我爸不会预约，没弄上&lt;/li&gt;
  &lt;li&gt;下午去外面吃东西，吃完跟他干活&lt;/li&gt;
  &lt;li&gt;晚上回来听我爸吹水&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;2020_07_01&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/maximum-length-of-repeated-subarray/&quot;&gt;最长重复子数组&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;出门，和他们逛了西单的苹果店，王府井的索尼体验店、小米之家。&lt;br /&gt;
苹果的东西就是好看，牛逼，那大屏幕，那分辨率。&lt;br /&gt;
索尼那音响，那8K大电视，那色彩，那音效，那VR，爱了爱了。&lt;br /&gt;
阿姨在我的带领下种草索尼一万多的音响，等有钱了会买吧。我以后家里，都得有&lt;del&gt;（做梦中）&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
        <pubDate>Wed, 01 Jul 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2020/07/01/study_20071/</link>
        <guid isPermaLink="true">http://localhost:4001/2020/07/01/study_20071/</guid>
        
        <category>学习记录</category>
        
        <category>日记</category>
        
        
      </item>
    
      <item>
        <title>学习日记_2020年6月</title>
        <description>&lt;h3 id=&quot;总结&quot;&gt;总结&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode：刷题约50道，周赛参加四次，排名分别为1058、414、165、455&lt;/li&gt;
  &lt;li&gt;机器学习：吴恩达视频看了点，用最基础的东西勉强完成了泰坦尼克号项目，pandas、numpy、scikitlearn入门&lt;/li&gt;
  &lt;li&gt;物联网：几个单片机小实验&lt;/li&gt;
  &lt;li&gt;娱乐：隐秘的角落、巴霍巴利王、黑客帝国&lt;/li&gt;
  &lt;li&gt;待完成：N道题、观后感算了吧..&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_30&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/&quot;&gt;用两个栈实现队列&lt;/a&gt; - easy&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;看了杂七杂八的，约等于啥也没学习&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_29&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/kth-largest-element-in-an-array/&quot;&gt;数组中的第K个最大元素&lt;/a&gt; - 可以用大根堆，但我用的sort..&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;隐秘的角落&lt;/code&gt; - 今天有点事情，没心态学习，干脆看完了这部剧，有空写个观后感吧 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;待完成&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_28&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/minimum-size-subarray-sum/&quot;&gt;长度最小的子数组&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-195/&quot;&gt;周赛195&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;455&lt;/code&gt; - 好难，就做出两题，第三题的思路超时
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/path-crossing/&quot;&gt;判断路径是否相交&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/check-if-array-pairs-are-divisible-by-k/&quot;&gt;检查数组对是否可以被 k 整除&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/number-of-subsequences-that-satisfy-the-given-sum-condition/&quot;&gt;满足条件的子序列数目&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;待完成&lt;/code&gt; - 递推表达式想了好久，最后写出来了，不过超时，也正常&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/max-value-of-equation/&quot;&gt;满足不等式的最大值&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;待完成&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;干活&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_27&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/first-missing-positive/&quot;&gt;缺失的第一个正数&lt;/a&gt; - hard - &lt;del&gt;leetcode的运行时间很不靠谱呀&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-29&quot;&gt;双周赛29&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;165&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AK&lt;/code&gt; - 第一题求平均数没平均还错一次…共错3次，比上次好很多了
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-29/problems/average-salary-excluding-the-minimum-and-maximum-salary/&quot;&gt;去掉最低工资和最高工资后的工资平均值&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-29/problems/the-kth-factor-of-n/&quot;&gt;n 的第 k 个因子&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-29/problems/longest-subarray-of-1s-after-deleting-one-element/&quot;&gt;删掉一个元素以后全为 1 的最长子数组&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-29/problems/parallel-courses-ii/&quot;&gt;并行课程 II&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;隐秘的角落&lt;/code&gt; - 好剧，心疼男主&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_26&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/remove-duplicate-node-lcci/&quot;&gt;移除重复节点&lt;/a&gt; - easy&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;51单片机
    &lt;ul&gt;
      &lt;li&gt;独立按键的原理是按下接地&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;定时器/计数器&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.elecfans.com/d/639031.html&quot;&gt;矩阵键盘&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_25&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/word-break/&quot;&gt;单词拆分&lt;/a&gt; - DP&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;51单片机
    &lt;ul&gt;
      &lt;li&gt;用网上的蜂鸣器发音模板，输入音调节奏调了一首塞尔达摇篮曲&lt;/li&gt;
      &lt;li&gt;根据文档控制&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LCD-1602&lt;/code&gt;显示屏显示字符&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_24&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/3sum-closest/&quot;&gt;最接近的三数之和&lt;/a&gt; - 想二分做，结果一直错，最后还是普通过了..&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;51单片机
    &lt;ul&gt;
      &lt;li&gt;编译软件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keil&lt;/code&gt; - 烧录软件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;STC-ISP&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;intrins&lt;/code&gt;函数 - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_crol_&lt;/code&gt;循环左移 - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_cror_&lt;/code&gt;循环右移 - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_nop_&lt;/code&gt;空操作&lt;/li&gt;
      &lt;li&gt;LED跑马灯&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_23&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;干活 - 手被划了十多道口子&lt;/li&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/add-binary/&quot;&gt;二进制求和&lt;/a&gt; - easy&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_22&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/pattern-matching-lcci/&quot;&gt;模式匹配&lt;/a&gt; - 因为想少写几句代码，结果错N次&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;边缘计算第一章&lt;/li&gt;
  &lt;li&gt;宝贝生日&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_21&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/binary-tree-maximum-path-sum/&quot;&gt;二叉树中的最大路径和&lt;/a&gt; - hard - 递归 - 用递归试了两下就过了，害怕&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-194&quot;&gt;周赛194&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;414&lt;/code&gt; - 勉强AC了前三题，终极罚时，自暴自弃，罚了一个多小时
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-194/problems/xor-operation-in-an-array/&quot;&gt;数组异或操作&lt;/a&gt; - easy&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-194/problems/making-file-names-unique/&quot;&gt;保证文件名唯一&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-194/problems/avoid-flood-in-the-city/&quot;&gt;避免洪水泛滥&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-194/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree/&quot;&gt;找到最小生成树里的关键边和伪关键边&lt;/a&gt; - hard - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;待完成&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;看了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;稚晖君&lt;/code&gt;的视频，买了个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;51单片机&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;matplotlib&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_20&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/regular-expression-matching/&quot;&gt;正则表达式匹配&lt;/a&gt; - hard - &lt;del&gt;错了十次&lt;/del&gt; - 可以用  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;有限自动状态机&lt;/code&gt; 或者 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;动态规划&lt;/code&gt; 完成 - 写完都吐了看不下了，希望有机会用dp和自动机写一遍… &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;待完成&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;kaggle
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.kaggle.com/c/titanic/overview&quot;&gt;Titanic&lt;/a&gt; - 勉勉强强把数据跑出来了，用的logistics回归,,,最后也就0.73，好像比默认的数据还低了一点。。不过好歹也算是第一次走了一遍流程&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_19&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/valid-palindrome/&quot;&gt;验证回文串&lt;/a&gt; - easy&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;numpy&lt;/li&gt;
  &lt;li&gt;pandas&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_18&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/recover-a-tree-from-preorder-traversal/solution/&quot;&gt;从先序遍历还原二叉树&lt;/a&gt; - hard - 字符串处理 - 栈&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;炉石新冒险，战棋&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_17&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/best-sightseeing-pair/&quot;&gt;最佳观光组合&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/median-of-two-sorted-arrays/&quot;&gt;寻找两个正序数组的中位数&lt;/a&gt; - hard - 二分查找&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/reverse-integer/&quot;&gt;整数反转&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;战棋五连鸡&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_16&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/kth-ancestor-of-a-tree-node/&quot;&gt;树节点的第 K 个祖先&lt;/a&gt; - hard - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;树上倍增&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/&quot;&gt;二叉树的序列化与反序列化&lt;/a&gt; - hard - 二叉树序列化 - BFS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;algorithm
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/jarjingx/article/details/8180560&quot;&gt;倍增&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/saramanda/article/details/54963914&quot;&gt;树上倍增&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_15&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/longest-common-prefix/&quot;&gt;最长公共前缀&lt;/a&gt; - easy -  &lt;del&gt;边聊天边写，错了6次orz&lt;/del&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/sum-of-mutated-array-closest-to-target/&quot;&gt;转变数组后最接近目标值的数组和&lt;/a&gt; - 二分&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/&quot;&gt;无重复字符的最长子串&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;滑动窗口&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/minimum-number-of-days-to-make-m-bouquets/&quot;&gt;制作 m 束花所需的最少天数&lt;/a&gt; - 二分法&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;python
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://docs.python.org/zh-cn/3/library/bisect.html?highlight=bisect&quot;&gt;bisect&lt;/a&gt; - 二分数组查找算法 - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bisect&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_14&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-193/&quot;&gt;周赛193&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1058&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/least-number-of-unique-integers-after-k-removals/&quot;&gt;不同整数的最少数目&lt;/a&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Counter&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/running-sum-of-1d-array/&quot;&gt;一位数组的动态和&lt;/a&gt; - easy - 前缀和&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-193/problems/minimum-number-of-days-to-make-m-bouquets/&quot;&gt;制作 m 束花所需的最少天数&lt;/a&gt; -  &lt;del&gt;还没做出来&lt;/del&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/contest/weekly-contest-193/problems/kth-ancestor-of-a-tree-node/&quot;&gt;树节点的第 K 个祖先&lt;/a&gt; - hard - &lt;del&gt;还没做出来&lt;/del&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;python
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://docs.python.org/zh-cn/3/library/collections.html#collections.Counter&quot;&gt;collections&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;Counter - 统计字典&lt;/li&gt;
          &lt;li&gt;deque - 双端队列，高效增删操作&lt;/li&gt;
          &lt;li&gt;defaultdict - 默认参数类型字典&lt;/li&gt;
          &lt;li&gt;namedtuple - 命名元组&lt;/li&gt;
          &lt;li&gt;OrderedDict - 记录插入顺序，顺序操作更快字典&lt;/li&gt;
          &lt;li&gt;UserDict - 带字典的类&lt;/li&gt;
          &lt;li&gt;UserList&lt;/li&gt;
          &lt;li&gt;UserString&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_13&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/climbing-stairs/&quot;&gt;爬楼梯&lt;/a&gt;-easy-dp&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/sum-of-even-numbers-after-queries/&quot;&gt;查询后的偶数和&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/add-two-numbers/&quot;&gt;两数相加&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;下棋&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_12&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/3sum/&quot;&gt;三数之和&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold/submissions/&quot;&gt;元素和小于等于阈值的正方形的最大边长&lt;/a&gt;-二维前缀和&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/sum-swap-lcci/&quot;&gt;交换和&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_11&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/daily-temperatures/&quot;&gt;每日温度&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;炉石战棋&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_10&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/palindrome-number/&quot;&gt;回文数&lt;/a&gt;-easy&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/generate-parentheses/&quot;&gt;括号生成&lt;/a&gt;-回溯&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_09&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/&quot;&gt;把数字翻译成字符串&lt;/a&gt;-DFS/DP/滚动数组&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/unique-email-addresses/&quot;&gt;独特的电子邮件地址&lt;/a&gt;-字符串处理&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;搬砖&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_08&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/satisfiability-of-equality-equations/&quot;&gt;等式方程的可满足性&lt;/a&gt;-并查集&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/letter-case-permutation/&quot;&gt;字母大小全排列&lt;/a&gt;-easy/深搜&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MachineLearning
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/jinping_shi/article/details/52433975&quot;&gt;正则化&lt;/a&gt;-特征值筛选/防止过拟合&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_43374551/article/details/83688913&quot;&gt;岭回归/Lasso回归&lt;/a&gt;-L2正则项/L1正则项&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;2020_06_07&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;leetcode
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/na-ying-bi/&quot;&gt;拿硬币&lt;/a&gt;-easy/暴力/位移&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/jump-game/&quot;&gt;跳跃游戏&lt;/a&gt;-伪广搜&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MachineLearning
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_40807247/article/details/82812206&quot;&gt;独热编码/one_hot_encoder&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/MLEveryday/100-Days-Of-ML-Code/blob/master/Code/Day%202_Simple_Linear_Regression.md&quot;&gt;LR by sklearn&lt;/a&gt;-线性回归&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/llhthinker/p/5330257.html&quot;&gt;Logistic回归&lt;/a&gt;-sigmoid函数&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
        <pubDate>Sun, 07 Jun 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2020/06/07/study_2006/</link>
        <guid isPermaLink="true">http://localhost:4001/2020/06/07/study_2006/</guid>
        
        <category>学习记录</category>
        
        <category>日记</category>
        
        
      </item>
    
      <item>
        <title>第一次坐飞机</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;第一次坐飞机也来水一篇博文,主要是技术差，没啥好写&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为太久没见我爸了，所以六一去北京住一段时间，正好有比较便宜的飞机票，于是乎开启第一次坐飞机&lt;/p&gt;

&lt;p&gt;可惜的是，因为缺少经验，买票的时候正好买了飞机翅膀上的座位，如图：
&lt;img src=&quot;/img/in-post/life/feiji.png&quot; alt=&quot;视野都被翅膀挡住了&quot; /&gt;
要不然起飞的时候，能看到很多海面上的岛屿，远远看过去，有种看谷歌地图的感觉。&lt;/p&gt;

&lt;p&gt;此次的目的地是去年成立的北京大兴机场，据说也是世界数一数二的机场了，因为新，科技第一应该是没问题的。因为没有好的俯瞰视野，所以没有一览机场全貌。不过就从侧面看，也是非常的巨大了。&lt;/p&gt;

&lt;p&gt;进机场之后，随处可见的手推车，电子显示屏，资助机器，直线路上还会有传送带。由于刚建成不久，到处都很新，显得非常气派。
&lt;img src=&quot;/img/in-post/life/daxingjichang.jpeg&quot; alt=&quot;机场内很多人拍照的景点&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后回去还有高速地铁，大兴机场线，35块钱直达北京市内的地铁站，20分钟可以走40公里，可以说是非常快了。地铁内的座椅也挺豪华，可能这不算地铁了，有一个我不知道的新概念吧。
&lt;img src=&quot;/img/in-post/life/daxingxian.jpeg&quot; alt=&quot;大兴线&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;最后，po一个bug。进北京前的一个信息登记，似乎这个系统除了高烧，不管你多少度都是正常呢…
&lt;img src=&quot;/img/in-post/life/tiwenapp.jpeg&quot; alt=&quot;bug&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;2020年6月2日&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Jun 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2020/06/02/goto_BeiJing/</link>
        <guid isPermaLink="true">http://localhost:4001/2020/06/02/goto_BeiJing/</guid>
        
        <category>生活</category>
        
        <category>随笔</category>
        
        
      </item>
    
      <item>
        <title>第一篇博客</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;今儿建这博客整了一天，一个评论半天没整出来，后来发现好像是太久没维护了，换了个gitalk，还挺好看的&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;距离上一次写笔记或者博文已经有两三年了吧，写写东西对输出自己的想法，整理脑子里的信息还是有好处的。再加上预计未来要学一大堆的东西，索性建个博客，要是以后真能做出什么成果，也有地方放着显摆~&lt;/p&gt;

&lt;p&gt;先写写这两年的总结吧&lt;/p&gt;

&lt;h3 id=&quot;2019届考研&quot;&gt;2019届考研&lt;/h3&gt;

&lt;p&gt;在我学完Coursera上吴恩达的课后，想继续深入学学神经网络。然而越往后我就越觉得我基础不行，毕竟大学数学都是混过去的，所以决心考研，以后走算法岗。&lt;/p&gt;

&lt;p&gt;毕竟工资高，不搬砖，搞不好还能成为工业革命的一份子（&lt;del&gt;天真！&lt;/del&gt;）。&lt;/p&gt;

&lt;p&gt;恰好师兄师姐们成绩也出来了，可以说是基本都考上了，尤其是xn师兄，370上复旦，这逆袭不就是鸡汤本汤呀。&lt;/p&gt;

&lt;p&gt;研究了一下，发现前几年的复旦都挺好考的，最低320，再加上一点点自信，二话不说直接莽复旦。毕竟人生难得几回博，失败了也问题不大。&lt;/p&gt;

&lt;p&gt;然后寒假前就开始准备考研。刚开始冲劲挺大，拿着本十天搞定考研词汇，一天好像2、300个单词，背7个小时，基本搞定了七天的。第七天去参加蓝桥杯，就给断了，之后再也没那能耐一天背那么久单词了。&lt;/p&gt;

&lt;p&gt;虽然前期没有像什么帖子或者视频里面说的，一天6点多起床学到11点啥的（&lt;del&gt;帖子都太夸张了吧&lt;/del&gt;），但我觉得还是效果不错了，至少光英语背了单词就终于把四级过了。&lt;/p&gt;

&lt;p&gt;然后我暑假就开始做真题了，可能我就是太性急了吧，结果暑假过后一下子闲了起来。&lt;/p&gt;

&lt;p&gt;在我此前的大学期间，几乎天天都会失眠，想一想心上人呀、难过的事情呀、一些天马行空的事呀之类的。&lt;/p&gt;

&lt;p&gt;但在考研那段时间，思考人生、社会想得更多了些。&lt;/p&gt;

&lt;p&gt;那时候，总在微博上看到些让人难过的消息，我就想，为什么会这样呢，人生的意义又是什么呢。&lt;/p&gt;

&lt;p&gt;最后我终于想明白了：&lt;em&gt;一切都是没有意义的呀&lt;/em&gt;。从此，我就从此走向了&lt;em&gt;虚无主义&lt;/em&gt;。&lt;/p&gt;

&lt;p&gt;可能是在压力过大、精神不稳加别人怂恿下，我和喜欢的女生表白了，结果也理所当然的是不成的。然后，直到考前一天背政治以外，再也没学习了。&lt;/p&gt;

&lt;p&gt;虽然我是想学的，但是在那种情况下，断了一天之后我就再也续不上了。结果是除了数学崩到80，其他还ok。正好复旦也爆炸，分数线到了370多，所以我也强行不亏。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2020届考研&quot;&gt;2020届考研&lt;/h3&gt;

&lt;p&gt;失去了应届生的身份，我只好再来二战，毕竟搬砖是不可能搬砖的。&lt;/p&gt;

&lt;p&gt;这一年，我可能变得傻兮兮的，失眠也没有了，啥事也不往心里去，也没啥目标和干劲，实训天天玩飞车，搞毕设。拍完毕业照后又继续赖在工作室了。&lt;/p&gt;

&lt;p&gt;可以说我是在工作室赖的最久的人了，从大一，到大五，也是没谁了。&lt;/p&gt;

&lt;p&gt;可能是人傻了的缘故，整个二战我都没有啥复习计划，单词似乎都没认真背，每天随便做一点数学了事。&lt;/p&gt;

&lt;p&gt;某师弟还说带switch给我玩，我让他别带，最终还是带了。我也不出意外的在海拉鲁遨游了一段时间。&lt;/p&gt;

&lt;p&gt;最后还和我喜欢的人在一起了，在空调房一起学习、在草坪上看星星、在宿舍楼下卿卿我我，度过了挺美好的一年的。&lt;/p&gt;

&lt;p&gt;最后还双双考上了研究生，还有那个借我游戏机的2B师弟也是。但还是有很多很遗憾的同学….祝好。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;写累了，一下子写那么多字，只能记流水账了…..&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;现在&quot;&gt;现在&lt;/h3&gt;

&lt;p&gt;首先谢谢某老师联系我后又不要我，我以为联系就算确立关系便没联系别人了，结果现在找不到老师，随缘了。&lt;/p&gt;

&lt;p&gt;而且我以为只要老师有名额，看到我那个还行的简历，就会选我，but还是有老师不要我….还有老师在我巴拉一大堆之后不回我….&lt;/p&gt;

&lt;p&gt;害，不过也没事，确实我的底子什么的也不太行，毕业想去大厂的话还得发顶会呢，目前我离高手差了是太远了。&lt;/p&gt;

&lt;p&gt;现在还不知道做什么方向，复旦的师兄毕业也转去了开发，但我还是想搏一搏，争取成为浪潮上的一朵小浪花吧。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;以此博客开始记录我真正开始的技术生涯吧，毕竟以前我学的什么java web之类的，都没有真正的深入过&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;上路吧，任何时候都不晚。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;2020年5月30日写到了31日&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 30 May 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4001/2020/05/30/the_first_blog/</link>
        <guid isPermaLink="true">http://localhost:4001/2020/05/30/the_first_blog/</guid>
        
        <category>生活</category>
        
        <category>日记</category>
        
        
      </item>
    
  </channel>
</rss>
